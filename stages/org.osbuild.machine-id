#!/usr/bin/python3
"""
Deal with /etc/machine-id

Explicitly define the state to /etc/machine-id. The possible values for
first-boot are:

- yes: This sets the machine-id to "uninitialized" and this will trigger
       ContidionFirstBoot in systemd
- no: This creates an empty machine-id. It will trigger the generation
      of a new machine-id but *not* the ConditionFirstBoot
- preserve: Leave the existing machine-id in place. Not having a machine-id
            with that set is an error.
"""

import pathlib
import sys

import osbuild.api

CAPABILITIES = []

SCHEMA = """
"additionalProperties": false,
"required": ["first-boot"],
"properties": {
  "first-boot": {
    "enum": ["yes", "no", "preserve"],
    "description": "Set the first boot behavior of the /etc/machine-id file in the tree"
  }
}
"""


def main(tree, options):
    mode = options["first-boot"]

    machine_id_file = pathlib.Path(tree) / "etc/machine-id"
    if mode == "yes":
        # available since systemd v247, systemd PR#16939
        machine_id_file.write_bytes(b"uninitialized\n")
    elif mode == "no":
        with machine_id_file.open("wb") as fp:
            fp.truncate(0)
    elif mode == "preserve":
        if not machine_id_file.is_file():
            print(f"{tree}/etc/machine-id cannot be preserved, it does not exist")
            return 1
    else:
        raise ValueError(f"unexpected machine-id mode '{mode}'")
    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
