#!/usr/bin/python3
"""
Change OSTree configuration

Change the configuration for an OSTree repository.
Currently only the following values are supported:
  - `sysroot.readonly`
  - `sysroot.bootloader`

See `ostree.repo-config(5)` for more information.
"""

import os
import sys

import osbuild.api
from osbuild.util import ostree

CAPABILITIES = []

SCHEMA = """
"additionalProperties": false,
"required": ["repo"],
"properties": {
  "repo": {
    "description": "Location of the OSTree repo.",
    "type": "string"
  },
  "config": {
    "type": "object",
    "additionalProperties": false,
    "description": "OSTree configuration groups",
    "properties": {
      "sysroot": {
        "type": "object",
        "additionalProperties": false,
        "description": "Options concerning the sysroot",
        "properties": {
          "bootloader": {
            "description": "Configure the bootloader that OSTree uses (use 'none' for BLS).",
            "type": "string",
            "enum": ["none", "auto", "grub2", "syslinux", "uboot", "zipl", "aboot"]
          },
          "readonly": {
            "description": "Read only sysroot and boot",
            "type": "boolean"
          },
          "bls-append-except-default": {
            "description": "Set value for bls-append-except-default",
            "type": "string"
          }
        }
      }
    }
  }
}
"""


def main(tree, options):
    repo = os.path.join(tree, options["repo"].lstrip("/"))
    sysroot_options = options["config"].get("sysroot", {})

    bootloader = sysroot_options.get("bootloader")
    if bootloader:
        ostree.cli("config", "set", "sysroot.bootloader", bootloader, repo=repo)

    readonly = sysroot_options.get("readonly")
    if readonly is not None:  # can be False, which we would want to set
        ro = "true" if readonly else "false"
        ostree.cli("config", "set", "sysroot.readonly", ro, repo=repo)

    bls_append_except_default = sysroot_options.get("bls-append-except-default")
    if bls_append_except_default:
        ostree.cli("config", "set", "sysroot.bls-append-except-default", bls_append_except_default, repo=repo)


if __name__ == '__main__':
    stage_args = osbuild.api.arguments()
    r = main(stage_args["tree"],
             stage_args["options"])
    sys.exit(r)
